package com.ers.daos;


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.ers.models.ErsReimbursement;
import com.ers.utils.ConnectionUtil;

public class ReimbursementDao implements ReimbursementInterface {
	
	UserDao uDao = new UserDao();
	ReimbursementStatusDao rsDao = new ReimbursementStatusDao();
	ReimbursementTypeDao rtDao = new ReimbursementTypeDao();

	@Override
	public List<ErsReimbursement> getAllReimbursements() {
		
		try(Connection conn = ConnectionUtil.getConnection()){
			
			String sql = "select * from ers_reimbursement";
			
			Statement s = conn.createStatement();
			
			ResultSet rs = s.executeQuery(sql);
			
			List<ErsReimbursement> reimbursementList = new ArrayList<>();
			
			while(rs.next()) {
				ErsReimbursement e = new ErsReimbursement(
						
						rs.getInt("reimb_id"),
						rs.getInt("reimb_amount"),
						rs.getTimestamp("reimb_submitted"),
						rs.getTimestamp("reimb_resolved"),
						rs.getString("reimb_description"),
						rs.getString("reimb_receipt"),
						null,
						null,
						null,
						null
						);
				
				if(rs.getInt("reimb_author_fk") != 0) {
					
					e.setReimb_author_fk(uDao.getUserById(rs.getInt("reimb_author_fk")));
				}
				
				if(rs.getInt("reimb_resolver_fk") != 0) {
					
					e.setReimb_resolver_fk(uDao.getUserById(rs.getInt("reimb_resolver_fk")));
				}
				
				if(rs.getInt("reimb_status_fk") != 0) {
					
					e.setReimb_status_fk(rsDao.getReimbursementStatusById(rs.getInt("reimb_status_fk")));
				}
				
				if(rs.getInt("reimb_type_fk") != 0) {
					
					e.setReimb_type_fk(rtDao.getReimbursementTypeById(rs.getInt("reimb_type_fk")));
				}
				
				reimbursementList.add(e);
											
			}
			
			return reimbursementList;
			
			
		}catch (SQLException e) {
			System.out.println("Get all reimbursements failed :(");
			e.printStackTrace();
		}
		
		return null;

		
	}
	

}
